using System;
using System.Collections.Generic;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;

namespace nslds.domain.Migrations
{
    public partial class GlobalSqlUtils : Migration
    {
        protected override void Up(MigrationBuilder migrationBuilder)
        {
            //return;
            // custom migration to inject the Global.Sql.Utils assembly, functions & search SP
            var sql1 =

@"CREATE ASSEMBLY [Global.Sql.Utils]
FROM 0x
WITH PERMISSION_SET = SAFE";

            var sql2 =

@"CREATE FUNCTION dbo.Encrypt(@value NVARCHAR(MAX), @token NVARCHAR(MAX)) RETURNS NVARCHAR(MAX)
AS EXTERNAL NAME [Global.Sql.Utils].[UserDefinedFunctions].[_encrypt]";

            var sql3 =

@"CREATE FUNCTION dbo.Decrypt(@value NVARCHAR(MAX), @token NVARCHAR(MAX)) RETURNS NVARCHAR(MAX)
AS EXTERNAL NAME [Global.Sql.Utils].[UserDefinedFunctions].[_decrypt]";

            var sql4 =

@"CREATE PROCEDURE [nslds].[StudentSearch] 
	-- Add the parameters for the stored procedure here
	@cpid int,
	@startdate datetime, 
	@enddate datetime,
	@ssn nvarchar(450),
	@name1 nvarchar(100),
	@name2 nvarchar(100),
	@name3 nvarchar(100),
	@dob datetime,
	@openay bit,
	@hasfah bit
AS
BEGIN
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	SET TRANSACTION ISOLATION LEVEL READ UNCOMMITTED;

	select rs.id as StudentId, rs.link2clientrequest as BatchId, 
	rs.encssn, rs.FirstName, rs.LastName, rs.DOB, 
	rs.RevOn as RequestDate, rs.isreceived, rs.ReceivedOn as ReceivedDate, 
	rs.Response as ResponseRoute, rs.StartDate 
	from nslds.clientrequeststudent rs
	inner join nslds.clientrequest cr on (rs.link2clientrequest = cr.id)
	where (cr.link2clientprofile = @cpid)
	and (rs.revon between @startdate and @enddate)
	and (@ssn is null or rs.encssn = @ssn)
	and (@dob is null or rs.dob = @dob)
	and (@name1 is null or upper(rs.firstname) like '%'+@name1+'%' or upper(rs.lastname) like '%'+@name1+'%')
	and (@name2 is null or upper(rs.firstname) like '%'+@name2+'%' or upper(rs.lastname) like '%'+@name2+'%')
	and (@name3 is null or upper(rs.firstname) like '%'+@name3+'%' or upper(rs.lastname) like '%'+@name3+'%')
	and (@openay is null or rs.startdate is not null)
	and (@hasfah = 0 or rs.isreceived = 1)
	;
END";
            migrationBuilder.Sql(sql1);
            migrationBuilder.Sql(sql2);
            migrationBuilder.Sql(sql3);
            migrationBuilder.Sql(sql4);
        }

        protected override void Down(MigrationBuilder migrationBuilder)
        {
        }
    }
}
